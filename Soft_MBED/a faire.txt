
autoriser le relache servo BARILLET suite ‡ son mouvement
dans CServoMoteurAX.cpp :

void CServoMoteurAX::Init(void)
{
  // Exemple : configure le comportement de rel√¢ch√© automatique pour chaque servo utilis√©
  // setDureeAvantRelache(13, 2000); // servo n¬∞13 rel√¢ch√© automatiquement au bout de 2sec
  // setDureeAvantRelache(14, RELACHE_SERVO_OFF);  // pour le servo 14, pas de rel√¢ch√© automatique de la commande

__________________________________________________________________________________________________
mettre les bras en config de dÈpart :

  // Lecture des parma√®tres de configuration des servos dans l'EEPROM : 
  //    - But√©e min
  //    - But√©e max
  //    - Position initiale √† la mise sous tension
  char sBuff[64]="\0";
  unsigned int servo_val;
  for (unsigned int i=0; i<NBRE_SERVOS_AX; i++) {
    sprintf(sBuff, "butee_min_servo_ax_%d", i);
    if (Application.m_eeprom.getValue(sBuff, &servo_val)) {
         setButeeMinPosition(i, servo_val);       
    }

    sprintf(sBuff, "butee_max_servo_ax_%d", i);
    if (Application.m_eeprom.getValue(sBuff, &servo_val)) {
         setButeeMaxPosition(i, servo_val);  
    }

    sprintf(sBuff, "position_initiale_servo_ax_%d", i);
    if (Application.m_eeprom.getValue(sBuff, &servo_val)) {
         setGoal(i, servo_val);
         wait (0.4); // Tempo pour √™tre certain que tous les servos ne bougent pas en m√™me temps (surconsommation)
    }
  }
}

_________________________________________________________________________

reglage de la vitesse des servo :
   \brief Commande d'un servo moteur

   \param numServo le servomoteur a piloter  (1 √† 20)
   \param vitesse vitesse a laquelle se deplace le servo

   \return --
*/
void CServoMoteurAX::CommandeVitesse(unsigned char id, unsigned int vitesse)
{
 setCRSpeed(id, vitesse);
}

__________________________________________________________________________


modif du 12 mai :

RECALAGE_X_BLEU

entry /
asser.Manuel(-60,-60);
countTimeMvt=0
exit /
asser.setPosition(55,0,0);
countTimeMvt=(0.2/Te)


RETRAIT

entry /
asser.XYTeta(92,-12*invMouv,(PI/2)*invMouv);
countTimeMvt=0

Ajout de PRISE pour arriver en boucle ouverte contre la fusÈe et dÈclencher la pompe aprËs le dÈplacement xyTheta.




